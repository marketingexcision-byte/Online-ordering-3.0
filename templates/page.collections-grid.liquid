{% liquid
  assign heading = section.settings.heading | default: page.title
  assign intro = section.settings.intro
  assign show_page_content = section.settings.show_page_content and page and page.content != blank
  assign button_label = section.settings.button_label | default: 'Shop collection'

  # ---- Read the Page metafield (List -> Collection) ----
  assign mf = null
  if page and page.metafields and page.metafields.custom and page.metafields.custom.collection_grid_collections
    assign mf = page.metafields.custom.collection_grid_collections
  endif

  # Normalize to either `items` (actual collection objects) OR `handle_list` (array of handles)
  assign items = blank
  assign handle_list = blank

  if mf and mf.value and mf.value != blank
    assign items = mf.value
  elsif mf and mf.references and mf.references != blank
    assign items = mf.references | map: 'value'
  endif

  # Fallback for older themes: extract handles from metafield_tag HTML
  if items == blank and mf
    assign tag_html = mf | metafield_tag
    if tag_html and tag_html != blank
      assign pieces = tag_html | split: 'href="'
      assign handles_csv = ''
      for p in pieces
        if forloop.index0 > 0
          assign url = p | split: '"' | first
          assign handle = url | split: '/collections/' | last | split: '?' | first | split: '/' | first
          if handle != blank
            if handles_csv == ''
              assign handles_csv = handle
            else
              assign handles_csv = handles_csv | append: ',' | append: handle
            endif
          endif
        endif
      endfor
      if handles_csv != ''
        assign handle_list = handles_csv | split: ','
      endif
    endif
  endif

  assign have_items = items and items != blank and items.size > 0
  assign have_handles = handle_list and handle_list != blank and handle_list.size > 0
%}

<style>
  /* ----- COLLECTION GRID LAYOUT ----- */
  .section--collections-grid .collection-grid{
    display:grid;
    gap:60px 40px;
    grid-template-columns: repeat(3, 1fr);
    max-width: 1320px; /* 3 x 412px + 2 x 32px gap (approx) */
    margin-inline:auto;
    justify-items:center; /* center cards in their tracks */
    margin-bottom: 80px;
  }
  @media (max-width: 1024px){
    .section--collections-grid .collection-grid{ grid-template-columns: repeat(2, 1fr); }
  }
  @media (max-width: 640px){
    .section--collections-grid .collection-grid{ grid-template-columns: 1fr; }
  }

  /* ----- CARD ----- */
  .section--collections-grid .collection-card{
    width:100%;
    max-width:412px;
    display:flex;
    flex-direction:column;
  }
  .section--collections-grid .collection-card__media{ width:100%; }
  .section--collections-grid .collection-card__image{
    width:100%;
    display:block;
    aspect-ratio:1/1;
    object-fit:cover;
    border-radius:15px;
  }
  /* Fallback for very old browsers without aspect-ratio */
  @supports not (aspect-ratio: 1 / 1){
    .section--collections-grid .collection-card__media{ position:relative; padding-top:100%; }
    .section--collections-grid .collection-card__image{ position:absolute; inset:0; height:100%; border-radius:15px; object-fit:cover; }
  }

  .section--collections-grid .collection-card__title{
    margin:16px 0 8px;
    font-weight:700;     /* "strong" look */
    line-height:1.3;
  }
  .section--collections-grid .collection-card__description{ margin:0 0 16px; }
  .section--collections-grid .collection-card__actions{ margin-top:auto; }

  .section--collections-grid .collection-card__button{
    display:inline-flex;
    align-items:center;
    justify-content:center;
    width:100%;
    height:40px;
    background:#0069a7;
    color:#fff;
    border-radius:9999px;  /* pill */
    text-decoration:none;
  }
  .section--collections-grid .collection-card__button:hover{ opacity: 85%; }

  .w-btn-wrapper .w-btn .w-btn-label {
  color: black;
}
</style>

<div class="wrapper">
  <section class="section section--collections-grid" aria-labelledby="collection-grid-heading">
    <div>
      {%- comment -%} Resolve parent_page metafield to a usable URL {%- endcomment -%}
{%- assign parent_url = nil -%}
{%- if page and page.metafields and page.metafields.custom and page.metafields.custom.parent_page != blank -%}
  {%- assign mf_parent = page.metafields.custom.parent_page -%}
  {%- if mf_parent.value and mf_parent.value.url -%}
    {%- assign parent_url = mf_parent.value.url -%}    
  {%- else -%}
    {%- assign parent_url = mf_parent | strip -%}       
  {%- endif -%}
{%- endif -%}

{%- if parent_url -%}
  <div class="w-btn-wrapper lazyload-element">
    <a
      class="w-btn icon_atleft"
      href="{{ parent_url }}"
      data-url="{{ parent_url }}"
    >
      <span class="w-btn-label font-bold"><em>‚Üê</em> Back</span>
    </a>
  </div>
{%- endif -%}

      {% if heading != blank or intro != blank or show_page_content %}
        <header class="section__header">
          {% if heading != blank %}
            <h1 id="collection-grid-heading" class="section__title text-h2">{{ heading | escape }}</h1>
          {% endif %}
          {% if intro != blank %}
            <div class="section__intro text-p1">{{ intro }}</div>
          {% endif %}
          {% if show_page_content %}
            <div class="section__content rte">{{ page.content }}</div>
          {% endif %}
        </header>
      {% endif %}

      {% if have_items or have_handles %}
        <div class="collection-grid" role="list">
          {% if have_items %}
            {% for collection in items %}
              {% liquid
                assign summary = collection.metafields.custom.short_description | default: collection.description
                assign collection_image = collection.image
                assign image_alt = collection_image and collection_image.alt != blank ? collection_image.alt : collection.title
              %}
              <article class="collection-card" role="listitem">
                <div class="collection-card__media">
                  {% if collection_image %}
                    {{
                      collection_image
                      | image_url: width: 960
                      | image_tag:
                        class: 'collection-card__image',
                        loading: 'lazy',
                        widths: '320, 480, 640, 800, 960',
                        sizes: '(min-width: 1080px) 320px, (min-width: 768px) 45vw, 90vw',
                        alt: image_alt,
                        decoding: 'async'
                    }}
                  {% else %}
                    <div
                      class="collection-card__image"
                      role="img"
                      aria-label="{{ collection.title | escape }} image placeholder"
                    ></div>
                  {% endif %}
                </div>
                <div class="collection-card__body">
                  <h3 class="collection-card__title">
                    <a href="{{ collection.url }}" class="collection-card__link"
                      ><strong>{{ collection.title }}</strong></a
                    >
                  </h3>
                  {% if summary != blank %}
                    <p class="collection-card__description text-p1">{{ summary | strip_html }}</p>
                  {% endif %}
                  <div class="collection-card__actions">
                    <a class="collection-card__button" href="{{ collection.url }}">{{ button_label | escape }}</a>
                  </div>
                </div>
              </article>
            {% endfor %}

          {% else %}
            {% for handle in handle_list %}
              {% assign collection = collections[handle] %}
              {% if collection %}
                {% liquid
                  assign summary = collection.metafields.custom.short_description | default: collection.description
                  assign collection_image = collection.image
                  assign image_alt = collection_image and collection_image.alt != blank ? collection_image.alt : collection.title
                %}
                <article class="collection-card" role="listitem">
                  <div class="collection-card__media">
                    {% if collection_image %}
                      {{
                        collection_image
                        | image_url: width: 960
                        | image_tag:
                          class: 'collection-card__image',
                          loading: 'lazy',
                          widths: '320, 480, 640, 800, 960',
                          sizes: '(min-width: 1080px) 320px, (min-width: 768px) 45vw, 90vw',
                          alt: image_alt,
                          decoding: 'async'
                      }}
                    {% else %}
                      <div
                        class="collection-card__image"
                        role="img"
                        aria-label="{{ collection.title | escape }} image placeholder"
                        style="background:#f2f4f7;"
                      ></div>
                    {% endif %}
                  </div>
                  <div class="collection-card__body">
                    <h3 class="collection-card__title">
                      <a href="{{ collection.url }}" class="collection-card__link"
                        ><strong>{{ collection.title }}</strong></a
                      >
                    </h3>
                    {% if summary != blank %}
                      <p class="collection-card__description text-p1">{{ summary | strip_html }}</p>
                    {% endif %}
                    <div class="collection-card__actions">
                      <a class="collection-card__button" href="{{ collection.url }}">{{ button_label | escape }}</a>
                    </div>
                  </div>
                </article>
              {% endif %}
            {% endfor %}
          {% endif %}
        </div>
      {% else %}
        <div class="collection-grid__empty text-p1">No collections have been assigned to this page yet.</div>
      {% endif %}
    </div>
  </section>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
  var links = document.querySelectorAll('.w-btn-wrapper a[data-url]');
  if (!links.length) return;

  links.forEach(function (link) {
    var raw = link.getAttribute('data-url');
    if (!raw) return;

    // Ensure same-origin to avoid CORS trouble
    var url;
    try {
      url = new URL(raw, window.location.origin);
      if (url.origin !== window.location.origin) return;
    } catch (_e) {
      return;
    }

    fetch(url.href, { credentials: 'same-origin' })
      .then(function (res) { return res.text(); })
      .then(function (html) {
        var doc   = new DOMParser().parseFromString(html, 'text/html');
        var title = (doc.querySelector('title') || {}).textContent || '';
        var clean = title.trim();

        // Split on common separators: en dash, em dash, hyphen, pipe
        var parts = clean.split(/[\u2013\u2014\-|]/); // ‚Äì ‚Äî - |
        if (parts.length > 1) clean = parts[0].trim();
        if (!clean) clean = 'Page';

        var label = link.querySelector('.w-btn-label');
        if (label) label.innerHTML = '<em>‚Üê</em> Back to ' + clean;
      })
      .catch(function (err) {
        // Keep default "Back" if anything fails
        console.error('Error fetching parent page title:', err);
      });
  });
});
</script>
